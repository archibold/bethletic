generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String @db.VarChar(255)
  email     String @db.VarChar(255)
  image_url String @db.VarChar(255)
}

model exercise {
  id                String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  body_part         String?
  equipment         String?
  gif_url           String?
  api_id            String?
  name              String?
  target            String?
  secondary_muscles String[]
  instructions      String[]
  user user_exercise[]
}

model exec_copy {
  body_part         String?
  equipment         String?
  gif_url           String?
  api_id            String?
  name              String?
  target            String?
  secondary_muscles String[]
  instructions      String[]
  id                String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
}

model invoices {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id String   @db.Uuid
  amount      Int
  status      String   @db.VarChar(255)
  date        DateTime @db.Date
}

model revenue {
  month   String @unique @db.VarChar(4)
  revenue Int
}

model users {
  id       String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name     String @db.VarChar(255)
  email    String @unique
  password String
  exercise user_exercise[]
}

model user_exercise {
  user       users     @relation(fields: [user_id], references: [id])
  user_id     String @db.Uuid// relation scalar field (used in the `@relation` attribute above)
  exercise   exercise @relation(fields: [exercise_id], references: [id])
  exercise_id String @db.Uuid// relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([user_id, exercise_id])
}